#部署Istio之前需要先修改：/etc/kubernetes/config
#增加：KUBE_ALLOW_PRIV="--allow-privileged=true" 选项

#使用istioctl对Deploy资源进行注入Sidecar并生成kubectl的执行文件：istioctl kube-inject -f  rc-v1.yaml > rc-v1-istio.yaml


#Istio 对 Pod 和服务的要求：

一：
#需要给端口正确命名：服务端口必须进行命名。
#端口名称只允许是<协议>[-<后缀>-]模式，其中<协议>部分可选择范围包括 http、http2、grpc、mongo 以及 redis，Istio 可以通过对这些协议的支持来提供路由能力。
#例如 name: http2-foo 和 name: http 都是有效的端口名，但 name: http2foo 就是无效的。
#如果没有给端口进行命名，或者命名没有使用指定前缀，那么这一端口的流量就会被视为普通 TCP 流量（除非显式的用 Protocol: UDP 声明 ）

二：
#关联服务：Pod 必须关联到 Kubernetes 服务，如果一个 Pod 属于多个服务，这些服务不能再同一端口上使用不同协议，例如 HTTP 和 TCP。

三：
#Deployment 应带有 app 以及 version 标签：在使用 Kubernetes Deployment 进行 Pod 部署的时候，建议显式的为 Deployment 加上 app 以及 version 标签。
#每个 Deployment 都应该有一个有意义的 app 标签和一个用于标识 Deployment 版本的 version 标签。
#app 标签在分布式跟踪的过程中会被用来加入上下文信息。Istio 还会用 app 和 version 标签来给遥测指标数据加入上下文信息。


apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: details
  ...
spec:
  hosts:
  - details       #将所有访问details服务的HTTP类型流量转到目标服务details的含有"subset: v1"标签的子Pod中
    http:
  - route:
    - destination:
        host: details
        subset: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: productpage
  ...
spec:
  gateways:   #这里是gateways类型的Service
  - bookinfo-gateway
  - mesh
    hosts:
  - productpage
    http:
  - route:
    - destination:
        host: productpage
        subset: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ratings
  ...
spec:
  hosts:
  - ratings
    http:
  - route:
    - destination:
        host: ratings
        subset: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: reviews
  ...
spec:
  hosts:
  - reviews
    http:
  - route:
    - destination:
        host: reviews
        subset: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: reviews
  ...
spec:
  hosts:
  - reviews   #所有访问服务reviews
    http:     #HTTP类型的流量
  - match:    #对此类流量进行匹配
    - headers:
        end-user:   #精确匹配end-user的值为exact
          exact: jason    
    route:    #对匹配住的流量执行的动作
    - destination:
        host: reviews
        subset: v2
  - route:
    - destination:
        host: reviews
        subset: v1
