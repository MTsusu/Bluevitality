ovs-vsctl(8)                                                              Open vSwitch Manual                                                             ovs-vsctl(8)



NAME
       ovs-vsctl - utility for querying and configuring ovs-vswitchd

SYNOPSIS
       ovs-vsctl [options] -- [options] command [args] [-- [options] command [args]]...

DESCRIPTION
       The ovs-vsctl program configures ovs-vswitchd(8) by providing a high-level interface to its configuration database.  See ovs-vswitchd.conf.db(5) for comprehen‐
       sive documentation of the database schema.

       ovs-vsctl connects to an ovsdb-server process that maintains an Open vSwitch configuration database.  Using this connection, it queries  and  possibly  applies
       changes  to the database, depending on the supplied commands.  Then, if it applied any changes, by default it waits until ovs-vswitchd has finished reconfigur‐
       ing itself before it exits.  (If you use ovs-vsctl when ovs-vswitchd is not running, use --no-wait.)

       ovs-vsctl can perform any number of commands in a single run, implemented as a single atomic transaction against the database.

       The ovs-vsctl command line begins with global options (see OPTIONS below for details).  The global options are followed by one or more commands.  Each  command
       should  begin  with  --  by itself as a command-line argument, to separate it from the following commands.  (The -- before the first command is optional.)  The
       command itself starts with command-specific options, if any, followed by the command name and any arguments.  See EXAMPLES below for syntax examples.

   Linux VLAN Bridging Compatibility
       The ovs-vsctl program supports the model of a bridge implemented by Open vSwitch, in which a single bridge supports ports on multiple VLANs.   In  this  model,
       each  port  on  a  bridge  is  either  a  trunk port that potentially passes packets tagged with 802.1Q headers that designate VLANs or it is assigned a single
       implicit VLAN that is never tagged with an 802.1Q header.

       For compatibility with software designed for the Linux bridge, ovs-vsctl also supports a model in which traffic associated with a given 802.1Q VLAN  is  segre‐
       gated into a separate bridge.  A special form of the add-br command (see below) creates a ``fake bridge'' within an Open vSwitch bridge to simulate this behav‐
       ior.  When such a ``fake bridge'' is active, ovs-vsctl will treat it much like a bridge separate from its ``parent bridge,'' but the actual  implementation  in
       Open  vSwitch uses only a single bridge, with ports on the fake bridge assigned the implicit VLAN of the fake bridge of which they are members.  (A fake bridge
       for VLAN 0 receives packets that have no 802.1Q tag or a tag with VLAN 0.)

OPTIONS
       The following options affect the behavior ovs-vsctl as a whole.  Some individual commands also accept their own options, which are given just before  the  com‐
       mand name.  If the first command on the command line has options, then those options must be separated from the global options by --.

       --db=server
              Sets  server as the database server that ovs-vsctl contacts to query or modify configuration.  The default is unix:/var/run/openvswitch/db.sock.  server
              must take one of the following forms:

              ssl:ip:port
                     The specified SSL port on the host at the given ip, which must be expressed as an IP address (not a DNS name) in IPv4 or IPv6 address format.  If
                     ip  is  an  IPv6  address,  then wrap ip with square brackets, e.g.: ssl:[::1]:6640.  The --private-key, --certificate, and --ca-cert options are
                     mandatory when this form is used.

              tcp:ip:port
                     Connect to the given TCP port on ip, where ip can be IPv4 or IPv6 address. If ip is an IPv6 address, then wrap ip  with  square  brackets,  e.g.:
                     tcp:[::1]:6640.

              unix:file
                     On POSIX, connect to the Unix domain server socket named file.

                     On Windows, connect to a local named pipe that is represented by a file created in the path file to mimic the behavior of a Unix domain socket.

              pssl:port[:ip]
                     Listen  on  the  given  SSL port for a connection.  By default, connections are not bound to a particular local IP address and it listens only on
                     IPv4 (but not IPv6) addresses, but specifying ip limits connections to those from the given ip, either IPv4 or IPv6 address.  If ip  is  an  IPv6
                     address,  then  wrap  ip with square brackets, e.g.: pssl:6640:[::1].  The --private-key, --certificate, and --ca-cert options are mandatory when
                     this form is used.

              ptcp:port[:ip]
                     Listen on the given TCP port for a connection.  By default, connection
