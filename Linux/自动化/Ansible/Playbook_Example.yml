---
- hosts: webservers                   #存在于Inventory中的特定主机或组
  gather_facts: false
  vars:                               #变量
    - http_port: 80           
    - max_clients: 200  
    - foo: test
  vars_files:
    - /home/root/ansible_vars.yml
  remote_user: root                   #远端执行权限
  tasks:                              #针对以上主机/组要执行的动作，name的值将在执行时输出
  - name: Test
    shell: shell /usr/bin/foo
    register: result
    until: result.stdout.find("all systems go") != -1   #Until
    retries: 5
    delay: 10
  - name: Example of looping over a command result    #循环命令的执行结果
    shell: touch /$HOME/{{ item }}    #with_lines的命令永远在controller的主机运行，仅shell模块在目标运行（遍历命令的输出）
    with_lines: /usr/bin/cat  /home/fg/test
  - name: exec shell scripts
    shell: echo "I've got '{{ foo }}' and am not afraid to use it!"
    when: foo is defined
  - name: install apache              #用yum模块操作（name是输出到屏幕的信息）
    yum: name=httpd state=installed   #安装
  - name: write the apache config file
    template: src=/srv/httpd.j2 dest=/etc/httpd.conf    #传输配置文件（其可在本地文件中调用变量）
    notify:                                             #notify用于触发下面的handlers动作
    - restart apache
  - name: ensure apache is running
    service: name=httpd state=started
    when: not ansible_os_family == "RedHat" or ansible_os_family ！= "Debian"
  - file: dest=/var/stuff/{{ item }} state=directory    #定义序列并设置起始值、终值、步长
      with_sequence: start=4 end=16 stride=2
  - name: add several users
    user: name={{ item.name }} state=present groups={{ item.groups }}
    ignore_errors: True
    with_items:
      - { name: 'user1', groups: 'wheel' }
      - { name: 'user2', groups: 'root' }
  - name: Create a register to represent the status if the docker-thinpool exsited
    shell: lsblk | grep docker-thinpool
    register: result                  #捕捉变量的输出结果，输出捕捉内容：command: echo {{ result.stdout }}
    ignore_errors: True
    tags: 
      - docker                        #执行特定tag：ansible-playbook x.yml --tags="docker,xxx1,xxx2,..."
  - debug: msg={{ item }}             # show all the hosts matching the pattern, ie all but the group www
    with_inventory_hostnames: all:!www
  - include: tasks/sometasks.yml
    when: "'reticulating splines' in output"
    sudo: yes
  - debug: msg={{ item }}
    with_random_choice:
       - "go through the door"
       - "drink from the goblet"
       - "press the red button"
       - "do nothing"
  handlers:                           #与notify协调，满足特定条件时触发(与host同级)
    - name: restart apache
      service: name=httpd state=restarted
    - name: transport file
      file: path=/etc/{{ item }} mode=0600 owner=root
      with_items:
       - my.cnf
       - shadow
       - fstab
