service telnet                            #service 服务名
{  
  bind            = 192.168.1.1           #绑定在本机的哪张网卡地址上
  only_from       = 192.168.1.0/24        #允许的来源地址（C端）
  only_from       = 192.168.2.0/24        #重复设定..
  only_from       = .test.com             #允许特定的域
  no_access       = 1.1.1.1 2.2.2.2       #黑名单
  access_times    = 1:00-9:00 20:00-23:00 #提供服务的时间段
  instances       = 10                    #同时只允许10个独立的请求
  per_source      = 15                    #限制每个源IP最大只能有15个并发连接
  
  flags           = SENSOR                #设置为SENSOR，拒绝条件触发后，将在全局生效，即所有被xinetd托管的服务都有效
  deny_time  = 2
  no_access  = 192.168.0.3                #禁止指定IP请求本服务，若其请求则xinetd所管理的全部服务2分钟内都禁止其再次访问
 
  socket_type     = stream                #指明是使用TCP的服务
  protocol        = tcp 
  wait            = no                    #xinetd是否等待守护进程结束才重新接管该端口 
  user            = root                  #服务启动时的身份      
  nice            = 0                     #使用的优先级
  server          =/usr/sbin/in.telnetd   #启动服务的程序
  server_args     = ....                  #启动服务时其携带的参数
  port            = 23                    #xinetd针对本服务所负责监听的端口
  log_on_failure  += USERID               #错误登入是记录的内容
  log_on_success  = ....                  #连接成功时应该记录到日志中的信息
  disable         = no                    #是否关闭此服务
  
  max_load        = 2.8                   #当系统负载达到2.8时所有服务将暂时中止（使用此选项则编译时应加入"--with-loadavg"）
 
  log_type FILE.1 /var/log/myservice.log 8388608 15728640
  #日志文件FILE.1临界值为8MB，到达此值时，syslog文件会出现告警，到达15MB时会停止所有使用这个日志系统的服务
} 

#赋值符号：
  #   =： 表示后面的参数就是这样
  #  +=： 表示后面的设为在原来的设定集合中里加入新的参数
  #  -+： 表示后面的设为在原来的参数集合中舍弃这里输入的参数


#和日志记录有关的取值：
  # 值          适用日志         描述
  # HOST        二者皆可         记录远程主机的地址
  # USERID      二者皆可         记录远程用户的ID
  # PID         log_on_success  记录服务器进程的PID
  # EXIT        log_on_success  记录服务器进程的退出信息
  # DURATION    log_on_success  记录任务持续的时间
  # ATTEMPT     log_on_failure  记录连接失败的原因
  # RECORD      log_on_failure  记录连接失败的额外的信息


# reload：
# systemctl restart  xinetd.service  
